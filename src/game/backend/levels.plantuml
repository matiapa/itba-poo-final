@startuml

' --------------- LEVELS --------------- '

' Level1 '

class Level1{
 - {static} MAX_MOVES: int
 - {static} REQUIRED_SCORE: int
 # fillCells(): void
 + tryMove(): bool
 + {static} levelInfo(): String
}

Level1 *-- Level1State


' Level1State '

class Level1State{
 - requiredScore: int
 - maxMoves: int
 + gameOver(): bool
 + playerWon(): bool
 + toString(): String
}


' Level2 '

class Level2{
 - {static} MAX_MOVES: int
 # fillCells(): void
 + tryMove(): bool
 - setGoldenCross(): void
 + {static} levelInfo(): String
}

Grid <-- Level2
Level2 *-- Level2State


' Level2State '

class Level2State{
 - long maxMoves
 - long goldenCells
 + gameOver(): bool
 + playerWon(): bool
 + toString(): String
 - addGoldenCells(): void
}

GameState <-- Level2State


' Level3 '

class Level3 {
  - {static} BOMB_FREQUENCY : double
  - {static} BOMB_INITIAL_MOVES : int
  - {static} NUMBER_OF_BOMBS : int
  + tryMove(): bool
  # fillCells(): void
  + informBombRemainingMoves(int): void
  + bombDeactivated(): void
  + bombExploded(): void
  + getBombInitialMoves(): int
  + {static} levelInfo(): String
}

Grid <-- Level3
Level3 *-- Level3State


' Level3State'

class Level3State {
  - bombExploded : boolean
  - bombsDeactivated : int
  - remainingMovements : int
  + gameOver(): bool
  + playerWon(): bool
  + toString(): String
  - informBombRemainingMoves(int): void
  - bombDeactivated(): void
  - bombExploded(): void
}

GameState <-- Level3State


' Level4 '

class Level4{
 - {static} INITIAL_TIME: int
 - {static} TIME_BONUS_ADDITIONAL_TIME: int
 - {static} TIME_BONUS_AMOUNT: int
 - {static} TIME_BONUS_FREQUENCY: double
 # fillCells(): void
 + tryMove(): bool
 + getAdditionalTime(): int
 + timeBonusConsumed(): void
 + {static} levelInfo(): String
}

Grid <-- Level4
Level4 *-- Level4State


' Level4State '

class Level4State{
 - timeBonusConsumed: int
 - timesUp: bool
 - timeCount: int
 + gameOver(): bool
 + playerWon(): bool
 + toString(): String
 - timesUp(): void
 - timeProviderConsumed(): void
}

GameState <-- Level4State


' Level5 '

class Level5{
 - {static} MAX_MOVES
 - {static} NUMBER_OF_WALLS
 - {static} WALL_SIDE_LENGTH
 # fillCells(): void
 + tryMove(): bool
 - paintInitialWalls(): void
 + removeCellWall(int,int): void
 + {static} levelInfo(): String
}

Level5 *-- Level5State


' Level5State '

class Level5State{
 - maxMoves: int
 - wallsLeft: int
 + gameOver(): bool
 + playerWon(): bool
 + toString(): String
 - removeWall(): void
}

GameState <-- Level5State

@enduml